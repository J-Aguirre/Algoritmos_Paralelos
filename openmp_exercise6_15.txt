6.
    int omp_get_thread_num();
    # pragma omp parallel for
    for(int i=0; i<10; i++){
        printf("Thread: %d. Iteration: %d\n", omp_get_thread_num(), i);
    }

7.
    Porque todas las tareas las realiza un solo thread, por lo cual no existe paralelismo y por lo tanto no existen datos repartidos ni secciones criticas, asi que al realizar las operaciones un unico thread la variable FACTOR que causaba problemas por como los distintos threads accedian a esta, ya no los genera y su ejecucion es correcta obteniendo el valor esperado.

8.
    int n = 10, i; int a[n];
    a[0] = 0;
    pragma omp parallel for
    for(i=1; i<n; i++)
        a[i] = (i(i+1))/2;

9.

