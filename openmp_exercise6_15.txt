6.
    int omp_get_thread_num();
    # pragma omp parallel for
    for(int i=0; i<10; i++){
        printf("Thread: %d. Iteration: %d\n", omp_get_thread_num(), i);
    }

7.
    Al ser un solo thread no se crean dependencias ya que estaria simulando un sistema secuencial, 
    el thread se encargaria de todas las iteraciones por lo cual el valor "factor" siempre obtendria 
    su valor correcto y por lo tanto el valor final seria el estimado.

8.
    int n = 10, i; int a[n];
    a[0] = 0;
    pragma omp parallel for
    for(i=1; i<n; i++)
        a[i] = (i(i+1))/2;

9.
    Cambiando el ambiente y utlizando schedule(runtime) el numero de bloques es determinado por como yo cambio OMP_SCHEDULE
